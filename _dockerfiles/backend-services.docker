# Stage 1: Build
FROM golang:1.23-alpine AS builder

# Set environment variables
#ENV CGO_ENABLED=0 GOOS=linux GOARCH=amd64

# Create working directory
WORKDIR /app

# Copy go.mod and go.sum files
COPY ./go.mod ./go.sum /app/

# Download dependencies
RUN go mod download

# Copy the source code
COPY ./ /app/

# Build the application
RUN go build -o api ./cmd/api
RUN go build -o sync ./cmd/sync
RUN go build -o worker ./cmd/worker

# Stage 2: Run
FROM alpine:latest

# Create working directory
WORKDIR /app

# Copy the built binary from the builder stage
COPY --from=builder /app/api ./api
COPY --from=builder /app/sync ./sync
COPY --from=builder /app/worker ./worker

# Expose port
EXPOSE 8080

# Run the application
CMD ["sh", "-c", "./api & ./sync & ./worker"]
