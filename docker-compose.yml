version: '3.8'

services:
  golang-api:
    build:
      context: ./_dockerfiles
      dockerfile: api.docker
    depends_on:
      - kafka
      - postgre-db
      - redis
    environment:
      - DB_HOST=postgre-db
      - DB_PORT=5432
      - REDIS_HOST=redis:6379
      - REDIS_PASSWORD=password
      - REDIS_DB=0
      - CONN_STR=postgres://user:password@postgre-db:5432/mpcwallet?sslmode=disable
      - MAX_CONNECTIONS=10
      - BROKERS=kafka:29092
      - KAFKA_WALLET_CREATED_TOPIC=wallet-create
      - KAFKA_TRANSACTION_FOUND_TOPIC=transaction-found
      - KAFKA_SYNCHRONIZE_GROUP_ID=synchronize-group
      - ETHEREUM_URL=https://sepolia.infura.io/v3/6c89fb7fa351451f939eea9da6bee755
      - GOOSE_DRIVER=postgres
      - GOOSE_DBSTRING=host=postgre-db user=user password=password dbname=mpcwallet port=5432 sslmode=disable TimeZone=UTC
      - ETHEREUM_SECRET_KEY=LEi6RTO6R5gIZqFBBtB79BGHC8BHziGW 
    ports:
      - "8080:8080"
    volumes:
      - ./:/app:cached
    command: ["sh", "-c", "cd /app && go mod download && go install github.com/pressly/goose/v3/cmd/goose@latest && go run cmd/api/main.go"]

  postgre-db:
    image: postgres:17
    container_name: postgre-db
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mpcwallet
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

  # db-migrations:
  #   build:
  #     context: ./_dockerfiles
  #     dockerfile: goose.docker
  #   depends_on:
  #     - postgre-db
  #   environment:
  #     GOOSE_DRIVER: postgres
  #     GOOSE_DBSTRING: host=localhost user=user password=password dbname=mpcwallet port=5432 sslmode=disable TimeZone=UTC
  #   volumes:
  #     - ./:/app:cached
  #   working_dir: /app
  #   command: ["sh", "-c", "goose -dir /app/internal/infrastructure/db/migrations up"]
  #   restart: "no"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
    ports:
      - "29092:29092"
    healthcheck:
      test:
        [
          "CMD",
          "kafka-topics",
          "--bootstrap-server",
          "localhost:9092",
          "--list",
        ]
      interval: 30s
      timeout: 10s
      retries: 5

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=password
      - REDIS_PORT=6379
      - REDIS_DATABASES=1

  # golang-synchronizer:
  #   build:
  #     context: ./_dockerfiles
  #     dockerfile: sync.docker
  #   depends_on:
  #     - kafka
  #     - postgre-db
  #   environment:
  #     - DB_HOST=postgre-db
  #     - DB_PORT=5432
  #     - CONN_STR=postgres://user:password@localhost:5432/mpcwallet?sslmode=disable
  #     - MAX_CONNECTIONS=10
  #     - BROKERS=kafka:29092
  #     - KAFKA_WALLET_CREATED_TOPIC=wallet-create
  #     - KAFKA_TRANSACTION_FOUND_TOPIC=transaction-found
  #     - KAFKA_SYNCHRONIZE_GROUP_ID=synchronize-group
  #     - ETHEREUM_SECRET_KEY=LEi6RTO6R5gIZqFBBtB79BGHC8BHziGW 
  #   volumes:
  #     - ./:/app
  #   command: ["sh", "-c", "cd /app && go mod download  && go run cmd/sync/main.go"]


volumes:
  postgres-data:
